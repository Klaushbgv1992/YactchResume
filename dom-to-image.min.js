(function(global){var util={};["isElement","canvasToBlob","toBlob","impl","impl.options"].forEach(function(name){util[name]=undefined});util.isElement=function(node){return node&&node.nodeType===1};util.canvasToBlob=function(canvas){if(canvas.toBlob)return new Promise(function(resolve){canvas.toBlob(resolve)});return util.toBlob(canvas.toDataURL())};util.toBlob=function(url){return fetch(url).then(function(response){return response.blob()})};util.impl=function(node,options){var impl={};options=options||{};impl.options={scale:options.scale||2,bgcolor:options.bgcolor||"#fff",quality:options.quality||1,filter:options.filter||function(n){return true},width:options.width,height:options.height};function toSvg(node){return Promise.resolve(node).then(function(node){var clone=node.cloneNode(true);clone.style.backgroundColor=impl.options.bgcolor;return clone}).then(inlineImages).then(inlineFonts).then(inlineStylesheets).then(function(clone){return makeSvgDataUri(clone,impl.options.width||node.offsetWidth,impl.options.height||node.offsetHeight)})}function toPixelData(node){return draw(node).then(function(canvas){var context=canvas.getContext("2d");var w=canvas.width;var h=canvas.height;return context.getImageData(0,0,w,h).data})}function toCanvas(node){return draw(node)}function toJpeg(node){return draw(node).then(function(canvas){return canvas.toDataURL("image/jpeg",impl.options.quality)})}function toPng(node){return draw(node).then(function(canvas){return canvas.toDataURL()})}function toBlob(node){return draw(node).then(util.canvasToBlob)}function getFontMimeTypeFromUrl(url){var formats={woff2:"font/woff2",woff:"font/woff",otf:"application/x-font-opentype",ttf:"application/x-font-ttf",eot:"application/vnd.ms-fontobject",sfnt:"application/font-sfnt",svg:"image/svg+xml"};var extensions=Object.keys(formats);var extension=url.split(".").pop().split(/[?&]/)[0];extension=extension.toLowerCase();return formats[extension]||""}function inlineImages(clone){var promises=[];var imgList=clone.querySelectorAll("img, image");var imgUrls=[];[].forEach.call(imgList,function(image){if(imgUrls.indexOf(image.getAttribute("src"))===-1){imgUrls.push(image.getAttribute("src"))}});imgUrls=imgUrls.filter(function(url){return url!==null&&url!==""});imgUrls.forEach(function(url){promises.push(getAndEncode(url).then(function(data){return{url:url,data:data}}))});return Promise.all(promises).then(function(urlsAndEncodedImages){return urlsAndEncodedImages.reduce(function(combinedPromise,obj){return combinedPromise.then(function(){var url=obj.url;var dataURL=obj.data;var imgs=clone.querySelectorAll('img[src="'+url+'"], image[href="'+url+'"]');[].forEach.call(imgs,function(img){if(img.tagName==="IMG"){img.setAttribute("src",dataURL)}else{img.setAttribute("href",dataURL)}})})},Promise.resolve()).then(function(){return clone})})}function inlineFonts(clone){return new Promise(function(resolve,reject){var styleSheets=clone.querySelectorAll("style");var fontLoadedPromises=[];[].forEach.call(styleSheets,function(sheet){var cssRules=sheet.sheet.cssRules;[].forEach.call(cssRules,function(rule){if(rule.type!==CSSRule.FONT_FACE_RULE)return;var fontFamily=rule.style.getPropertyValue("font-family")||"";var src=rule.style.getPropertyValue("src")||"";if(!src)return;var fontLoadedPromise=Promise.all([].map.call(document.fonts,function(font){return font.load().then(function(){if(font.family===fontFamily)return getAndEncode(src.split('"')[1])})}));fontLoadedPromises.push(fontLoadedPromise)})});Promise.all(fontLoadedPromises).then(function(){resolve(clone)}).catch(function(e){reject(e)})})}function inlineStylesheets(clone){var promises=[];var styleSheets=clone.querySelectorAll("link[rel=stylesheet]");[].forEach.call(styleSheets,function(sheet){if(sheet.href){promises.push(fetch(sheet.href).then(function(res){return res.text()}).then(function(text){const style=document.createElement("style");style.textContent=text;clone.querySelector("head").appendChild(style)}))}});return Promise.all(promises).then(function(){return clone})}function makeSvgDataUri(node,width,height){node.setAttribute("xmlns","http://www.w3.org/1999/xhtml");return Promise.resolve(node).then(function(xhtml){var serialized=new XMLSerializer().serializeToString(xhtml);var svg='<svg xmlns="http://www.w3.org/2000/svg" width="'+width+'" height="'+height+'"><foreignObject x="0" y="0" width="100%" height="100%">'+serialized+"</foreignObject></svg>";return"data:image/svg+xml;charset=utf-8,"+encodeURIComponent(svg)})}function draw(domNode){return toSvg(domNode).then(function(svg){return new Promise(function(resolve,reject){var image=new Image;image.onload=function(){var canvas=document.createElement("canvas");canvas.width=impl.options.width||domNode.offsetWidth*impl.options.scale;canvas.height=impl.options.height||domNode.offsetHeight*impl.options.scale;var context=canvas.getContext("2d");if(impl.options.bgcolor){context.fillStyle=impl.options.bgcolor;context.fillRect(0,0,canvas.width,canvas.height)}context.drawImage(image,0,0,canvas.width,canvas.height);resolve(canvas)};image.onerror=function(error){reject(error)};image.src=svg})})}function getAndEncode(url){if(/^data:/.test(url))return Promise.resolve(url);return new Promise(function(resolve,reject){var request=new XMLHttpRequest;request.onreadystatechange=done;request.ontimeout=timeout;request.responseType="blob";request.timeout=3e4;request.open("GET",url,true);request.send();function done(){if(request.readyState!==4)return;if(request.status!==200){reject(new Error("Cannot fetch resource "+url+", status: "+request.status));return}var encoder=new FileReader;encoder.onloadend=function(){var dataURL=encoder.result;resolve(dataURL)};encoder.readAsDataURL(request.response)}function timeout(){reject(new Error("Timeout of 30000ms occured while fetching resource: "+url))}})}return{toSvg:toSvg,toPng:toPng,toJpeg:toJpeg,toBlob:toBlob,toPixelData:toPixelData,toCanvas:toCanvas,impl:impl}};util.impl.options=function(options){return{scale:options.scale||2,bgcolor:options.bgcolor||"#fff",quality:options.quality||1,filter:options.filter||function(n){return true},width:options.width,height:options.height}};global.domtoimage={toSvg:function(node,options){return util.impl(node,options).toSvg(node)},toPng:function(node,options){return util.impl(node,options).toPng(node)},toJpeg:function(node,options){return util.impl(node,options).toJpeg(node)},toBlob:function(node,options){return util.impl(node,options).toBlob(node)},toPixelData:function(node,options){return util.impl(node,options).toPixelData(node)},toCanvas:function(node,options){return util.impl(node,options).toCanvas(node)},util:util}})(this);
